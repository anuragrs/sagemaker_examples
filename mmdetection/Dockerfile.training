# Build an image of mmdetection that can do distributing training on Amazon Sagemaker 

# using Sagemaker PyTorch container as base image
# from https://github.com/aws/sagemaker-pytorch-container
ARG UBUNTU="16.04"
ARG PYTORCH="1.6.0"
ARG CUDA="101"
ARG REGION="us-east-1"
FROM 763104351884.dkr.ecr.${REGION}.amazonaws.com/pytorch-training:${PYTORCH}-gpu-py36-cu${CUDA}-ubuntu${UBUNTU}

############# BASIC SETUP ##############
 RUN apt-get update
 RUN apt-get install -y curl git
 RUN apt-get update && apt-get install -y ffmpeg libsm6 libxext6 git ninja-build libglib2.0-0 libsm6 libxrender-dev libxext6 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

############# Use pre-built binaries Pytorch default install ############
RUN pip install --upgrade torchvision==0.7.0+cu101 -f https://download.pytorch.org/whl/torch_stable.html

############# mmdetection section ##############
ENV FORCE_CUDA="1"
ENV TORCH_CUDA_ARCH_LIST="Pascal;Volta;Turing"
ENV FVCORE_CACHE="/tmp"
WORKDIR /opt/ml/code
# install mmcv full from source to avoid ABI issues
RUN git clone https://github.com/open-mmlab/mmcv.git
RUN cd mmcv && MMCV_WITH_OPS=1 pip install -e .
RUN cd ..
RUN conda clean --all
RUN git clone https://github.com/open-mmlab/mmdetection.git mmdetection

ENV PYTHONUNBUFFERED=TRUE
ENV PYTHONDONTWRITEBYTECODE=TRUE
ENV MMDETECTION /opt/ml/code/mmdetection

RUN cd mmdetection/ && \
    pip install -r /opt/ml/code/mmdetection/requirements/build.txt && \
    pip install --no-cache-dir -e .

############# SageMaker section ##############
COPY container_training/mmdetection_train.py /opt/ml/code

ENV SAGEMAKER_SUBMIT_DIRECTORY /opt/ml/code
ENV SAGEMAKER_PROGRAM mmdetection_train.py

WORKDIR /
